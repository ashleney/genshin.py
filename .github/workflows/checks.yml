name: Run checks

on: [push, pull_request, issue_comment]

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: install nox
        run: |
          uv venv
          uv pip install nox

      - name: lint
        run: |
          uv run nox -s lint

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/test'))

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install nox
        run: |
          uv venv
          uv pip install nox

      - name: Run tests
        env:
          GENSHIN_COOKIES: ${{ secrets.GENSHIN_COOKIES }}
          HONKAI_COOKIES: ${{ secrets.HONKAI_COOKIES }}
          LOCAL_GENSHIN_COOKIES: ${{ matrix.python-version == '3.10' && secrets.LOCAL_GENSHIN_COOKIES || '' }}
          HSR_COOKIES: ${{ secrets.HSR_COOKIES }}
          ZZZ_COOKIES: ${{ secrets.ZZZ_COOKIES }}

        run: |
          uv run nox -s test --verbose -- --cov-append
          mv .coverage .coverage.${{ matrix.python-version }}

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage.${{ matrix.python-version }}
          retention-days: 1
          if-no-files-found: error
          include-hidden-files: true

  upload-coverage:
    needs: [test]
    runs-on: ubuntu-latest
    if: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Combine coverage
        run: |
          uv sync --extra all --extra pytest
          source .venv/bin/activate
          python -m coverage combine
          python -m coverage xml -i

      - name: Upload coverage to codeclimate
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: cd8c7d84ae5f98d86882d666dce0946fe5aae1e63f442995bd9c6e17869e6513
        with:
          coverageLocations: .coverage.xml:coverage.py

  type-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: install nox
        run: |
          uv venv
          uv pip install nox

      - name: Run type checker
        run: |
          uv run nox -s type-check

  verify-types:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: install nox
        run: |
          uv venv
          uv pip install nox

      - name: Run type checker
        run: |
          uv run nox -s verify-types

  prettier:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Run prettier
        run: |
          npx prettier --check *.md docs/*.md *.yml
